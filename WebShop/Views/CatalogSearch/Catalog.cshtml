@{
    ViewBag.Title = "Catalogt";
}
@model WebShop.Models.Search.SearchModel
@section Styles {
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.6.1/nouislider.min.css" />
}
@section Scripts {
    <script src="https://cdnjs.cloudflare.com/ajax/libs/noUiSlider/15.6.1/nouislider.min.js"></script>
    <script>
        const priceSlider = document.getElementById("price-slider");
        const minOutput = document.getElementById("price-min");
        const maxOutput = document.getElementById("price-max");

        noUiSlider.create(priceSlider, {
            start: [0, 10000],
            connect: true,
            step: 10,
            range: {
                min: 0,
                max: 10000
            }
        });

        priceSlider.noUiSlider.on("update", (values) => {
            minOutput.textContent = Math.round(values[0]);
            maxOutput.textContent = Math.round(values[1]);
        });

        document.getElementById("apply-filters").addEventListener("click", function (e) {
            const [minPrice, maxPrice] = priceSlider.noUiSlider.get();
            const onlyAvailable = document.getElementById("only-available").checked;
            const form = document.getElementById("filters-form");

            // Установка значения hidden input'ов
            document.getElementById("minPriceInput").value = Math.round(minPrice);
            document.getElementById("maxPriceInput").value = Math.round(maxPrice);
            document.getElementById("onlyAvailableInput").value = onlyAvailable;

            // Удаление старых скрытых бренды
            form.querySelectorAll("input[name='brands[]']").forEach(el => el.remove());

            // Добавление новых брендов
            Array.from(document.querySelectorAll('input[name="brands"]:checked')).forEach(cb => {
                const input = document.createElement("input");
                input.type = "hidden";
                input.name = "brands[]";
                input.value = cb.value;
                form.appendChild(input);
            });

        });
    </script>
}
<div class="container-fluid">
    
    <div class="primary-layout">
        <h1 class="main-title">
            <small>Найдено @Model.Result.TotalCount товар(ов)</small>
        </h1>
        <div class="primary-content">
            <div class="sidebar">
                <div class="filter">
                    <form id="filters-form" method="get" action="@Url.Action("Catalog")">

                        <input type="hidden" name="minPrice" id="minPriceInput" />
                        <input type="hidden" name="maxPrice" id="maxPriceInput" />
                        <input type="hidden" name="onlyAvailable" id="onlyAvailableInput" />

                        <div class="filter__main">
                            <!-- Цена -->
                            <div class="filter__section">
                                <div class="filter__title">Цена</div>
                                <div class="filter__body">
                                    <div class="price-range">
                                        <div id="price-slider"></div>
                                        <div class="slider-values">
                                            <span id="price-min">0</span> — <span id="price-max">10000</span> Лей.
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <!-- Наличие -->
                            <div class="filter__section">
                                <div class="filter__title">Наличие</div>
                                <div class="filter__body">
                                    <div class="filter__option checkbox-label">
                                        <input class="checkbox-label__input" type="checkbox" id="only-available" name="available">
                                        <label class="checkbox-label__main" for="only-available">Только в наличии</label>
                                    </div>
                                </div>
                            </div>

                            <!-- Бренд -->
                            <div class="filter__section">
                                <div class="filter__title">Бренд</div>
                                <div class="filter__body" id="brands-container">
                                    @foreach (var brand in Model.Result.AvailableBrands)
                                    {
                                        var safeId = "brand-" + brand.Replace(" ", "-").ToLower();
                                        <div class="filter__option checkbox-label">
                                            <input class="checkbox-label__input" type="checkbox" name="brands" value="@brand" id="@safeId">
                                            <label class="checkbox-label__main" for="@safeId">@brand</label>
                                        </div>
                                    }
                                </div>
                            </div>

                            <!-- Кнопки -->
                            <div class="filter__footer">
                                <div class="filter__btns">
                                    <button type="submit" class="filter__btn-accept btn btn--main" id="apply-filters">Применить</button>
                                    <a class="filter__btn-reset btn btn--ghost" id="reset-filters" type="button" href="@Url.Action("Catalog")">
                                        Сбросить
                                    </a>
                                </div>
                            </div>
                        </div>
                    </form>
                </div>
            </div>
            <main class="main-content">
                @{
                    var page = Model.Page;
                }
                @if (page?.TotalPages > 1)
                {
                    <div class="pagination-wrap">
                        <div class="pagination">
                            @if (page.HasPreviousPage)
                            {
                                <a class="pagination__prev" href="@Url.Action("Catalog", new {page = page.PageNumber - 1 })">
                                    <svg class="icon icon-arrow-left pagination__icon">
                                        <use href="~/assets/images/svg/symbol/sprite.svg#arrow-left"></use>
                                    </svg>
                                </a>
                            }
                            <ul class="pagination__list">
                                @{
                                    int current = page.PageNumber ?? 1;
                                    int total = page.TotalPages ?? 1;
                                    int start = Math.Max(1, current - 3);
                                    int end = Math.Min(total, current + 3);

                                    if (start > 1)
                                    {
                                        <li class="pagination__item"><a class="pagination__link" href="@Url.Action("Catalog", new { page = 1 })">1</a></li>
                                        if (start > 2)
                                        {
                                            <li class="pagination__item">&hellip;</li>
                                        }
                                    }

                                    for (int i = start; i <= end; i++)
                                    {
                                        <li class="pagination__item">
                                            <a class="pagination__link @(i == current ? "active" : "")" href="@Url.Action("Catalog", new {page = i })">@i</a>
                                        </li>
                                        }

                                        if (end < total)
                                        {
                                            if (end < total - 1)
                                            {
                                                <li class="pagination__item">&hellip;</li>
                                            }
                                            <li class="pagination__item"><a class="pagination__link" href="@Url.Action("Catalog", new { page = total })">@total</a></li>
                                        }
                                }
                            </ul>
                            @if (page.HasNextPage)
                            {
                                <a class="pagination__next" href="@Url.Action("Catalog", new { page = page.PageNumber+1 })">
                                    <svg class="icon icon-arrow-right pagination__icon">
                                        <use href="~/assets/images/svg/symbol/sprite.svg#arrow-right"></use>
                                    </svg>
                                </a>
                            }
                        </div>
                    </div>
                }
                <div class="catalog-main">
                    <div class="row">
                        @foreach (var product in Model.Result.Products)
                        {
                            <div class="col-6 col-sm-4 col-lg-3">
                                <article class="product">
                                    <div class="product__wrapper">
                                        <header class="product__header">
                                            <a class="product__img-wrap" href="@Url.Content("~/assets/images/content/product-main-promo-zoom-" + product.Image + ".jpg")">
                                                <img class="product__img" src="@Url.Content("~/assets/images/content/product-img-"+ @product.Image + ".jpg")" alt="Product">
                                            </a>
                                            @if (product.Status == "bonus")
                                            {
                                                <div class="product__stickers">
                                                    <div class="product__stickers-sticker product__stickers-sticker--action">Акция</div>
                                                </div>
                                            }
                                        </header>
                                        <div class="product__body">
                                            <div class="product__title">
                                                <a class="product__title-link" href="@Url.Action("Card", "Product", new { value = product.Article })">@product.ProductName</a>
                                                <a class="spec-table-list__brand-link" href="@Url.Action("Card", "Product", new { value = product.Article })">@product.BrandName</a>
                                            </div>
                                            <div class="product__info">
                                                <div class="product__instock">
                                                    @if (product.Quantity > 0)
                                                    {
                                                        <i class="fas fa-check success">В наличии</i>
                                                    }
                                                    else
                                                    {
                                                        <i class="fas fa-times fail">Нет в наличии</i>
                                                    }
                                                </div>
                                                <div class="product__articul">Артикул @product.Article</div>
                                            </div>
                                            <a class="product__add btn btn--main" href="@Url.Action("Card", "Product", new { value = product.Article })">Цена <span>@product.Price</span> лей</a>
                                            <div class="product__footer">
                                                <ul class="rate product__rate">
                                                </ul>
                                            </div>
                                        </div>
                                    </div>
                                </article>
                            </div>
                        }
                    </div>
                </div>
            </main>
        </div>
    </div>
</div>
